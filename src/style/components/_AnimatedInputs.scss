.animated_input {
	position: relative;
	margin: 20px 0 40px;

	textArea {
		width: 40vw;
	}
	input,
	textArea {
		background-color: transparent;
		border: 0;
		border-bottom: 2px #fff solid;
		display: block;
		padding: 15px 0;
		font-size: 1.5rem;
		color: #fff;
		&:valid,
		&:focus {
			outline: 0;
			border-bottom-color: $main-color;
			& + label {
				span {
					color: $main-color;
					filter: drop-shadow(0 0 5px $main-color);
					transform: translateY(-50px);
				}
			}
		}
	}
	label {
		position: absolute;
		top: 15px;
		left: 0;
		pointer-events: none;
		span {
			display: inline-block;
			min-width: 5px;
			color: #fff;
			transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
			&:nth-child(1) {
				text-transform: capitalize;
			}
		}
	}
}
.custom_animated-btn {
	text-transform: capitalize;
	margin: auto;
	font-family: inherit;
	font-size: 20px;
	background: $main-color;
	color: #000;
	padding: 0.7em 1em;
	padding-left: 0.9em;
	display: flex;
	align-items: center;
	border: none;
	border-radius: 16px;
	overflow: hidden;
	transition: all 0.2s;
	span {
		display: block;
		margin-left: 0.3em;
		transition: all 0.3s ease-in-out;
	}
	svg {
		display: block;
		transform-origin: center center;
		transition: transform 0.3s ease-in-out;
	}
	&:hover {
		.svg-wrapper {
			animation: fly-1 0.6s ease-in-out infinite alternate;
			svg {
				animation: rollover 1.5s ease-in-out infinite alternate;
			}
		}

		span {
			transform: translateX(5.125em);
		}
	}
	&:active {
		transform: scale(0.95);
	}
}

@keyframes fly-1 {
	from {
		transform: translateY(0.1em);
	}

	to {
		transform: translateY(-0.1em);
	}
}

@keyframes rollover {
	from {
		transform: translateX(1em) rotate(0deg) scale(1);
	}

	to {
		transform: translateX(4em) rotate(360deg) scale(1.25);
	}
}
